#! /usr/bin/php
<?php
/**
 * Copyright 2005-2010 MERETHIS
 * Centreon is developped by : Julien Mathis and Romain Le Merlus under
 * GPL Licence 2.0.
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation ; either version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, see <http://www.gnu.org/licenses>.
 *
 * Linking this program statically or dynamically with other modules is making a
 * combined work based on this program. Thus, the terms and conditions of the GNU
 * General Public License cover the whole combination.
 *
 * As a special exception, the copyright holders of this program give MERETHIS
 * permission to link this program with independent modules to produce an executable,
 * regardless of the license terms of these independent modules, and to copy and
 * distribute the resulting executable under terms of MERETHIS choice, provided that
 * MERETHIS also meet, for each linked independent module, the terms  and conditions
 * of the license of that module. An independent module is a module which is not
 * derived from this program. If you modify this program, you may extend this
 * exception to your version of the program, but you are not obliged to do so. If you
 * do not wish to do so, delete this exception statement from your version.
 *
 * For more information : contact@centreon.com
 *
 * SVN : $URL: http://svn.modules.centreon.com/centreon-clapi/trunk/www/modules/centreon-clapi/core/centreon $
 * SVN : $Id: centreon 205 2011-08-12 18:36:00Z jmathis $
 *
 */
	$debug = 0;
	
	ini_set("display_errors", "Off");

	global $version;

	/**
	 * Declare Options 
	 */
	$shortopts  = "";
	$shortopts .= "u:"; /** Users */
	$shortopts .= "p:"; /** Password */
	$shortopts .= "a:"; /** Action */
	$shortopts .= "o:"; /** Object type */
	$shortopts .= "v:"; /** Action */
	$shortopts .= "h"; /** Help */
	$shortopts .= "V"; /** Version */
	$shortopts .= "a:"; /** Action */
	$shortopts .= "i:"; /** Import Massive data */
	$shortopts .= "e"; /** Export all configuration */
	
	$options = getopt($shortopts);
	if ($debug) {
		print_r($options);
	}
	
	if (!file_exists("../etc/api.conf.php")) {
		chdir(dirname(__FILE__));
	}

	require_once "../etc/api.conf.php";
	require_once "$centreon_etc/centreon.conf.php";
	require_once "./class/centreonAPI.class.php";

	/**
	 * Create Centreon API object
	 */
	$api = new CentreonAPI((isset($options["u"]) ? $options["u"] : "") , (isset($options["p"]) ? $options["p"] : ""), (isset($options["a"]) ? $options["a"] : ""), $centreon_path, $options);

	if (isset($options["h"])) {
		$api->printHelp();
	}

	if (isset($options["V"])) {
		$api->printVersion();
		exit(0);		
	}

	/**
	 * Now works
	 */
	if ($api->login == "" || $api->password == "") {
		if (file_exists($_SERVER["HOME"]."/.centreonApi")) {
			$uid = posix_getpwuid (fileowner($_SERVER["HOME"]."/.centreonApi"));
			$perms = substr(sprintf('%o', fileperms($_SERVER["HOME"]."/.centreonApi")), -3);
			if (strcmp($perms,'400') == 0  && strcmp($_SERVER['USER'], $uid['name']) == 0) {
				$handle = @fopen($_SERVER["HOME"]."/.centreonApi", "r");
				if ($handle) {
					/**
					 * Read Only the first line 
					 */
					$str = fgets($handle);
					fclose($handle);
					$credential = split(":", $str);
					$api->setLogin($credential[0]);
					$api->setPassword($credential[1]);
					$api->checkUser();
				}
				$api->launchAction();
			} else {
				print "Please check access on login file...\n\n";
				$api->printHelp();
			}
		} else {
	 	   print "ok\n";
	 	   $api->printHelp();
		}
	} else {
	  	
	  	if (!isset($api->options["V"]) && !isset($api->options["h"])) {
			$api->checkUser();
		}
		
		/*
		 * Check action to do
		 */
		if (isset($api->options["e"])) {
			$api->export();
		} else if (isset($api->options["i"])) {
			$api->import($api->options["i"]);
		} else if (isset($api->options["a"])) {
	  		$api->launchAction();
	  	}
	}
	$api->close();
?>